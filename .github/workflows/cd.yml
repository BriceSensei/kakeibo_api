name: CD pipeline

on:
  workflow_run:
    workflows: ["CI pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login Dockerhub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Pull Docker image
        run: docker pull bricesensei/kakeibo_api:latest

      - name: Delete old Docker container
        run: |
          if [ $(docker ps -a -q -f name=kakeibo_api) ]; then
            docker rm -f kakeibo_api
          fi

      - name: Run new Docker container
        run: |
          docker run -d -p 8080:8080 --name kakeibo_api bricesensei/kakeibo_api:latest

      - name: run grafana and prometheus
        run: |
          if [ $(docker ps -a -q -f name=grafana) ]; then
            docker rm -f grafana
          fi
          docker run -d -p 3000:3000 --name grafana grafana/grafana:latest

          if [ $(docker ps -a -q -f name=prometheus) ]; then
            docker rm -f prometheus
          fi
          docker run -d -p 9090:9090 --name prometheus prom/prometheus:latest

      # - name: Create kubeconfig
      #   run: |
      #     mkdir ${HOME}/.kube
      #     echo ${{ secrets.KUBECONFIG }} | base64 --decode > ${HOME}/.kube/config
      #     chmod 600 ${HOME}/.kube/config
      #     cat ${HOME}/.kube/config

      # - name: verify config 
      #   run: | 
      #     kubectl config set-context minikube --cluster=minikube --user=minikube --namespace=default
      #     kubectl config use-context minikube
      #     kubectl config get-contexts

      # - name: Use context
      #   run: | 
      #     kubectl config use-context minikube

      # - name: Deploy to K8s
      #   run: |
      #     kubectl apply -f kubernetes/ --validate=false


      # - name: Set up kubeconfig
      #   run: |
      #     mkdir -p $HOME/.kube
      #     echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
      #     chmod 600 $HOME/.kube/config
      #     cat $HOME/.kube/config  # Optionnel : pour déboguer, supprimer ou commenter en production
      #   shell: bash
    
      # - name: Test kubectl
      #   run: |
      #     echo "Lister toutes les ressources Kubernetes :"
      #     kubectl get all -v=6  # Active le mode verbeux pour plus de détails
      #   shell: bash

      # - name: Verify Kubernetes manifests
      #   run: |
      #     echo "Vérification des manifestes Kubernetes :"
      #     ls -la kubernetes
      #     cat kubernetes/deployment.yml
      #     cat kubernetes/service.yml

      # - name: Apply Kubernetes manifests
      #   run: |
      #     echo "Application des manifestes Kubernetes avec mode verbeux :"
      #     kubectl apply -f kubernetes/deployment.yml -v=6
      #     kubectl apply -f kubernetes/service.yml -v=6
      #   shell: bash

      # - name: Set up kubeconfig
      #   run: |
      #     mkdir -p $HOME/.kube
      #     echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
      #     chmod 600 $HOME/.kube/config
      #     echo "Vérification du contexte actuel de kubectl :"
      #     kubectl config current-context  # Vérifie que le bon contexte est utilisé
      #   shell: bash

      
