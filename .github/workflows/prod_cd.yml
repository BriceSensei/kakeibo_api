name: Production CD pipeline

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: [self-hosted, production]  # Attention à bien ajouter le label production au runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login Dockerhub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Check Docker version
        run: docker --version

      - name: Check Docker info
        run: docker info

      - name: Pull Docker image
        run: docker pull bricesensei/kakeibo_api:latest

      - name: Delete old Docker container
        run: |
          if [ $(docker ps -a -q -f name=kakeibo_api) ]; then
            docker rm -f kakeibo_api
          fi

      - name: Check if port 8080 is in use
        run: sudo lsof -i -P -n | grep LISTEN

      - name: Run new Docker container
        run: |
          docker run -d -p 8080:8080 --name kakeibo_api bricesensei/kakeibo_api:latest

      - name: Run Grafana
        run: |
          if [ $(docker ps -a -q -f name=grafana) ]; then
            docker rm -f grafana
          fi
          docker run -d -p 3000:3000 --name grafana \
          -v grafana-storage:/var/lib/grafana \
          grafana/grafana:latest

      - name: Prepare Prometheus config directory
        run: |
          mkdir -p ~/prometheus_config

      - name: Copy Prometheus config from kakeibo_api
        run: |
          docker cp kakeibo_api:/app/prometheus/prometheus.yml ~/prometheus_config/prometheus.yml

      - name: Run Prometheus
        run: |
          if [ $(docker ps -a -q -f name=prometheus) ]; then
            docker rm -f prometheus
          fi
          docker run -d -p 9090:9090 --name prometheus \
          -v ~/prometheus_config/prometheus.yml:/etc/prometheus/prometheus.yml \
          prom/prometheus:latest

      - name: Run Nginx
        run: |
            sudo systemctl enable nginx
            sudo systemctl restart nginx

      - name: Start Node Exporter
        run: |
            sudo systemctl start node_exporter

      - name: verify deployment
        run: |
          kubectl get all


# attention a la création du runner sur le serveur de production il faut bien ajouter le label production a la configuration du runner
# ./config.sh --url https://github.com/BriceSensei/kakeibo_api --token ARGZCDYG5KKMBBNNWWDBRW3HEFRUY --labels production
# ./run.sh