# Déploiement de l'API kakeibo
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kakeibo-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kakeibo-api
  template:
    metadata:
      labels:
        app: kakeibo-api
    spec:
      containers:
      - name: kakeibo-api
        image: bricesensei/kakeibo_api:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        env: 
          - name: NODE_ENV
            value: production
---
# Service de l'API kakeibo
apiVersion: v1
kind: Service
metadata:
  name: kakeibo-api-service
spec:
  type: NodePort
  selector:
    app: kakeibo-api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30008
---
# Déploiement de Prometheus
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        ports:
        - containerPort: 9090
        volumeMounts:
          - name: prometheus-config
            mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
# Service de Prometheus
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
spec:
  type: NodePort
  ports:
    - port: 9090
      nodePort: 30090
  selector:
    app: prometheus
---
# Déploiement de Grafana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
        - containerPort: 3000
        env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "admin"
        volumeMounts:
          - name: grafana-storage
            mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
---
# Service de Grafana
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: NodePort
  ports:
    - port: 3000
      nodePort: 30030
  selector:
    app: grafana


